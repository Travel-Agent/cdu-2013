Notater cdu april 2013

1. Intro
   - How many uses Git as their "main" SCM system?
   - Git vs Subversion
     - Distributed vs central
     - local "copy" of repository vs ...
     - easy to branch, easy to merge - atlease easier.
     - can be abit scary to start with

2. Our (eStils) goals
   - Situation:
     Brand new application ment our short term goals where related to the development process of new features. Did not have to take release into 
     consideration in the short term.
   - Get controll over our source. 
     - Familiarize oneself with Git as a SCM. 
     - The Git log should be read like a short story of our resent changes. One should be able to use this too get a feel for what has recently happened 
       in the project.
     - Review; use the log activly in review in order to improve the time spent on this.
   - Long term goals:
     - Find a sutable release strategy
     - Userstories and task should be structured in a manner that makes it possible to remove elements that are not ready for release.

3. Demo
   - Branching
   - Commit pull push
   - FF vs No-FF merge
   - Merge vs Rebase (remote)
     - via auto-rebase
   (- Pull fra feil branch)
   (- Reflog)

4. Release strategy

5. Oppsummering
   - Freedom of useage; what do you want to get out for your SCM and how are you going to do it?
   - Team effort; with different rutes to the same goal come the need to create clear and consise rule. These can - and should - change 
     depending on team collelation and overall project goals/forces.
     - One should also strive for perfection; always improving through experiments and by change. Most modern development methodologies include forums
       where this is natural. E.g. SCRUMMs retrospective. 